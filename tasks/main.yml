---

- name: Ensure lookup required ci variables from env
  ansible.builtin.set_fact: { "{{ item }}": "{{ lookup('env', item | upper ) }}" }
  loop: "{{ set_and_check_ci_facts_required_vars }}"
  when: not set_and_check_ci_facts_from_terraform_state

- name: Ensure lookup required ci variables from terraform state
  block:

    - name: Ensure terraform init
      ansible.builtin.command:
        cmd: "{{ set_and_check_ci_facts_terraform_command }} init"
        chdir: "{{ set_and_check_ci_facts_terraform_dir }}"
        creates: .terraform/terraform.tfstate
      delegate_to: localhost

    - name: Ensure terraform state loaded
      ansible.builtin.command:
        cmd: "{{ set_and_check_ci_facts_terraform_command }} show -json -lock=false"
        chdir: "{{ set_and_check_ci_facts_terraform_dir }}"
      register: _terraform_state_output
      changed_when: false
      delegate_to: localhost

    - name: Set fact _terraform_state
      ansible.builtin.set_fact:
        _terraform_state: "{{ _terraform_state_output.stdout }}"
      delegate_to: localhost

    - name: Ensure lookup required variables
      ansible.builtin.set_fact: { 
        "{{ item }}": "{{ _terraform_state 
          | community.general.json_query('values.outputs.'+item+'.value')
        }}" 
      }
      loop: "{{ set_and_check_ci_facts_required_vars }}"
      delegate_to: localhost

  when: set_and_check_ci_facts_from_terraform_state

- name: Check required ci variables
  ansible.builtin.fail:
    msg: Environment variable '{{ item }}' is not set
  when: not lookup('vars', item)
  with_items: "{{ set_and_check_ci_facts_required_vars 
    | difference(set_and_check_ci_facts_non_required_vars)  }}"

- name: Ensure lookup required environment variables
  ansible.builtin.set_fact: { "{{ item }}": "{{ lookup('env', item | upper ) }}" }
  loop: "{{ set_and_check_ci_facts_required_env_vars }}"

- name: Check required environment variables
  ansible.builtin.fail:
    msg: Environment variable '{{ item }}' is not set
  when: not lookup('vars', item)
  with_items: "{{ set_and_check_ci_facts_required_env_vars 
    | difference(set_and_check_ci_facts_non_required_env_vars) }}"

- name: Ensure lookup required environment variables from TF_VAR_*
  ansible.builtin.set_fact: { "{{ item }}": "{{ lookup('env', 'TF_VAR_'+item) }}" }
  loop: "{{ set_and_check_ci_facts_required_tf_vars }}"

- name: Check required environment variables from TF_VAR_*
  ansible.builtin.fail:
    msg: Environment variable '{{ 'TF_VAR_'+item }}' is not set
  when: not lookup('vars', item)
  with_items: "{{ set_and_check_ci_facts_required_tf_vars 
    | difference(set_and_check_ci_facts_non_required_tf_vars) }}"

...